<h1 class="page_header">Modules</h1>

<% if flash[:error] %>
  <div class="error-msg"><%= flash[:error] %></div>
<% end %>


<div class="explanation">
  <% if user_signed_in? %>
    <% if @wps_servers.length > 0 %>
      <ul>
        <li>Users can create Modules from a Module Template by specifying all inputs and outputs that template requires.</li>
        <li>A list of Module Templates can be found in the Module Catalog.</li>
      </ul>
    <% else %>
      <ul>
        <li>Before you can start working with modules, you need to add a WPS server using the link below.</li>
      </ul>
    <% end %>
  <% else %>
    Registered users can create Modules based on processes available on various remote web servers.  The Catalog below shows some of the modules that other users of iGUESS are using.
  <% end %>
</div>


<ul class="tabs">
  <% if user_signed_in? %>
    <li><a class="l" id="t1" href="#configured_modules_tab">Configured Modules</a></li>
  <% end %>
  <li><a class="l" id="t2" href="#module_catalog_tab">Module Catalog</a></li>
</ul>

<div id="tab-panes" class="tab-pane-container">
  <% if user_signed_in? %>
    <div id="configured_modules_tab">
      <% if @wps_servers.empty? %>
        No module servers have been configured.  You can add one by clicking on the link below.<br>
        <a href="#"><%= image_tag("document_add_24.png", :class => "link-icon") %>Add new server</a>
      <% else %>
        <% if @mod_configs.empty? %>
          <div id="mod-list-none">  
            No modules have been configured yet for <span class="city-name"></span>.  
            <%= link_to "Click here to create one.", new_mod_config_path %>
          </div>   
        <% else %>
          <div id='mod-list'>      
            These are the calculation modules that have been configured.


<!-- For sorting a table with the id sortable_table -->


            <table id="sortable_table" class="zebra sortable">
              <thead><tr><th>Name</th><th>Based on</th><th>Status</th><th>Notes</th></tr></thead>
              <tbody id="tableContainer">
                <% @mod_configs.each do |m| %> 
                  <% ok = (m.wps_process && m.wps_process.alive) %>
                  <tr> 
                    <td><%= link_to(m.name, m) %>
                      <% if not ok %>
                        <div class="error-msg module-not-found">Process not found on server -- It is either offline or has been deleted or renamed</div>
                        <%= link_to m, 
                                    confirm: "Deleting this module is a permanent action.\n\n" +
                                             "Click OK if you are sure you want to delete this module." do %>
                          <%= image_tag("document_delete_16.png", :class => "link-icon") %>Delete Module
                        <% end %>
                      <% end %>
                    </td>
                    <td><%= m.wps_process && (m.wps_process.title || m.wps_process.identifier) || "Unknown process" %></td>
                    <td><span class="status-<%= m.status %>"><%= getPrettyStatusName(m.status) %></span></td>
                    <td><%= m.descr %></td>
                  </tr>
                <% end %>
              </tbody>
            </table>
          </div>
        <% end %>
        <br />
        <%= link_to new_mod_config_path do %>
          <%= image_tag("document_add_24.png", :class => "link-icon") %>New Module Configuration
        <% end %>
      <% end %>
    </div>
  <% end %>

  <div id="module_catalog_tab">
    <div> 
      <% if @wps_servers.length > 0 %>
        Catalog of modules found on the following servers:
      <% else %>
        No process servers have been configured.  You can add one by clicking on the link below.
      <% end %>

      <ul id="wps-server-list">
        <% @wps_servers.each do |s| %>
          <li>
            <div>
              <span class="wps-title"><%= s.title %></span> <span class="wps-providerName"><%= s.provider_name %></span>
              <img src="/assets/small_gear.png" class="info-icon" alt="More info" title="Click for details" rel="#server-infotable-<%= s.id %>">
            </div>
            <div class="wps-descr" class="wps-abstr"><%= s.abstract %></div>
          </li>
        <% end %>
      </ul>
      <% if user_signed_in? %>
        <div id="catalog-add-new-server-link"><a href='#' onclick="alert('Not implemented yet!')">
          <%= image_tag("document_add_24.png", :class => "link-icon") %>Add new server</a>
        </div>
      <% end %>
    </div>

    <% if @wps_servers.length > 0 %>
      <div id="module-catalog">

        <% @wps_processes.each do |p| %>
          <h2 class="process-title"><%= p.title %></h2>
          <div class="catalog-item">
            <div class = "process-identifier">Identifier: <span><%= p.identifier %></span></div>
            <div class="process-descr"><%= p.abstract %></div>
            <div class="process-server-name">
              <span class="hosted-by">Hosted by:</span><span class="server-name"><%= p.wps_server.title %></span>
              <img src="/assets/small_gear.png" class="info-icon" alt="More info" 
                   title="Click for details" rel="#server-infotable-<%= p.wps_server.id %>">
            </div>

            <table class="model-descr-table">
              <% inputs  = ProcessParam.find_all_by_wps_process_id_and_is_input_and_alive(p.id, true,  true, :order=>:title) %>
              <% outputs = ProcessParam.find_all_by_wps_process_id_and_is_input_and_alive(p.id, false, true, :order=>:title) %>

              <tbody class="inputs">
                <tr><th colspan=3 class="group-header" scope="rowgroup"><div class="outdent">
                  <% if inputs.size == 0 %>
                      No Inputs
                  <% else %>
                    Model Inputs
                  <% end %>
                </div></th></tr>
                
                <% if inputs.size > 0 %>
                  <tr><th>Parameter Name</th><th>Identifier</th><th>Description</th></tr>

                  <% inputs.each do |i| %>
                    <tr>
                      <td class="param-name"><%= i.title %></td>
                      <td class="param-name">[<%= i.identifier %>]</td>
                      <td class="param-descr"><%= i.abstract %></td>
                    </tr>
                  <% end %>
                <% end %>

                <tr><th colspan=3 class="group-header" scope="rowgroup"><div class="outdent">
                  <% if outputs.size == 0 %>
                      No Outputs
                  <% else %>
                    Model Outputs
                  <% end %>
                </div></th></tr>

                <% if outputs.size > 0 %>
                  <tr><th>Parameter Name</th><th>Identifier</th><th>Description</th></tr>

                  <% outputs.each do |o| %>
                    <tr>
                      <td class="param-name"><%= o.title %></td>
                      <td class="param-name">[<%= o.identifier %>]</td>
                      <td class="param-descr"><%= o.abstract %></td>
                    </tr>
                  <% end %>
                <% end %>
              </tbody>
            </table>
            <% if user_signed_in? %>
              <a href="/mod_configs/new?template=<%= p.id %>">
                  <%= image_tag("document_add_24.png", :class => "link-icon") %>Create new configuration for this service</a>
            <% end %>
          </div>  <!-- End of "catalog-item" div -->
        <% end %>
      </div>
    <% end %>
  </div>
</div>

<!-- The following will start life hidden, and will only be revealed when the user clicks an info button -->
<!-- Details (name, descr, etc.) will be populated as we get info from the servers -->
<% @wps_servers.each do |s| %>
  <div id="server-infotables">
      <div class="infotable" id="server-infotable-<%= s.id %>">
        <div class="close"></div>
        <h1  class="wps-title"><%= s.title %></h1>
        <div class="wps-abstr"><%= s.abstract %></div>
        <div style="overflow:hidden">
          <dl>
            <dt>Provider:</dt><dd class="wps-providerName"><%= s.provider_name %></dd>
            <dt>Contact:</dt><dd>
              <span class="wps-email"><%= mail_to(s.contact_email, s.contact_name, :encode => :javascript) %></span>
            </dd>
            <dt>Server URL:</dt><dd><%= s.url %></dd>
            <dt>GetCapabilities URL:</dt><dd class="wps-describeProcessLink">
              <%= link_to("WPS", s.url + "?SERVICE=WPS&VERSION=1.1.0&REQUEST=GetCapabilities", :target => "_blank") %>
            </dd>
          </dl>
        </div>
      </div>
  </div>
<% end %>


<script>
  // Gets run when page is fully loaded
  $(document).ready(function() {

    // Activate our jquery tabs 
    if($("ul.tabs").length != 0) {
      $(function() {
        // setup ul.tabs to work as tabs for each div directly under div.panes
        $('ul.tabs').tabs('#tab-panes > div', { history: true });
      });
    }

    // Activate layer info overlay popups and such
    $('img[rel]').overlay();    

    for(var i = 0; i < <%= @wps_processes.size %>; i++)
      $('.item-' + i + ' img[rel]').overlay();    // Activate layer info overlays


    // Accordion initialization code -- allows user to reclose accordion item by clicking on header
    // This init code will be called repeatedly as we add a new item to the catalog.  This will let users expand items
    // before everything is fully loaded, making the UI feel much more responsive.  But we have to be careful not to add
    // multiple click events to any item; to prevent this, we unbind everything before rebinding.

    $('#module-catalog > h2').unbind('click');  // Clear out previously added click handlers

    $('#module-catalog > h2').bind('click', function() {

      var animTime = 200;

      $('.catalog-item').slideUp(animTime);     // Close any open panes

      if($(this).hasClass('current')) {
        $(this).removeClass('current');
      } else {
        $('.current').removeClass('current');
        $(this).addClass('current');
        $(this).next().slideDown(animTime);     // Open selected pane
      }
    });


    $('#sortable_table').tablesorter({ sortList: [[0,0]], headers: { 3: {sorter: false}}, sortMultiSortKey: 'ctrlKey' });   
    
  });

</script>
